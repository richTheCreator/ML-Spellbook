"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var parser=require("@babel/parser"),traverse=_interopDefault(require("@babel/traverse")),get=_interopDefault(require("lodash.get")),prettier=require("prettier"),logger=_interopDefault(require("signale")),is=_interopDefault(require("unist-util-is")),nodeToString=_interopDefault(require("hast-util-to-string")),strip=_interopDefault(require("strip-indent")),flatten=_interopDefault(require("lodash.flatten"));const codeFromNode=e=>r=>{let t="";const o=parser.parse(r,{plugins:["jsx"]});return traverse(o,{enter(o){if(e(o))return t=r.slice(o.node.start,o.node.end),void o.stop()}}),t},fromSpecifiers=(e=[])=>Array.isArray(e)&&e.length>0?e.map(e=>get(e,"local.name")):[],importsFromEntry=e=>{try{const r=parser.parse(e.value,{sourceType:"module"}),t=[];return traverse(r,{enter(e){if(e.isImportDeclaration()){"docz"!==get(e,"node.source.value")&&t.push(...fromSpecifiers(e.node.specifiers))}else;}}),t}catch(e){return[]}},format=e=>new Promise((r,t)=>{try{r(prettier.format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),r(e)}}),componentName=e=>{const r=e.match(/^\<\\?(\w+)/);return r&&r[1]},isPlayground=e=>"Playground"===e,isOpenTag=e=>e.isJSXOpeningElement()&&isPlayground(e.node.name.name),isClosetag=e=>e.isJSXClosingElement()&&isPlayground(e.node.name.name),removePlayground=e=>{const r=codeFromNode(isOpenTag),t=codeFromNode(isClosetag);return e.replace(r(e),"").replace(t(e),"")},addCodeProp=e=>async(r,t)=>{const o=componentName(r.value),a=RegExp(`^\\<${o}`);if(isPlayground(o)){const n=(await format(nodeToString(r))).slice(1,1/0),i=`{props,${e.join(",")}}`,s=strip(removePlayground(n)).trim().replace(/'/g,"\\'").replace(/`/g,"\\`");r.value=r.value.replace(a,`<${o} __position={${t}} __code={\`${s}\`} __scope={${i}}`)}},getScope=(e,r)=>importsFromEntry(e);var index=()=>e=>{const r=flatten(e.children.filter(e=>is("import",e)).map(getScope)),t=[e.children.filter(e=>is("jsx",e)).map(addCodeProp(r))];return Promise.all(t).then(()=>e)};exports.default=index;
