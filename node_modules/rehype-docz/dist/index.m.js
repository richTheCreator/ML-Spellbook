import{parse}from"@babel/parser";import traverse from"@babel/traverse";import get from"lodash.get";import{format}from"prettier";import logger from"signale";import is from"unist-util-is";import nodeToString from"hast-util-to-string";import strip from"strip-indent";import flatten from"lodash.flatten";const codeFromNode=e=>r=>{let o="";const t=parse(r,{plugins:["jsx"]});return traverse(t,{enter(t){if(e(t))return o=r.slice(t.node.start,t.node.end),void t.stop()}}),o},fromSpecifiers=(e=[])=>Array.isArray(e)&&e.length>0?e.map(e=>get(e,"local.name")):[],importsFromEntry=e=>{try{const r=parse(e.value,{sourceType:"module"}),o=[];return traverse(r,{enter(e){if(e.isImportDeclaration()){"docz"!==get(e,"node.source.value")&&o.push(...fromSpecifiers(e.node.specifiers))}else;}}),o}catch(e){return[]}},format$1=e=>new Promise((r,o)=>{try{r(format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),r(e)}}),componentName=e=>{const r=e.match(/^\<\\?(\w+)/);return r&&r[1]},isPlayground=e=>"Playground"===e,isOpenTag=e=>e.isJSXOpeningElement()&&isPlayground(e.node.name.name),isClosetag=e=>e.isJSXClosingElement()&&isPlayground(e.node.name.name),removePlayground=e=>{const r=codeFromNode(isOpenTag),o=codeFromNode(isClosetag);return e.replace(r(e),"").replace(o(e),"")},addCodeProp=e=>async(r,o)=>{const t=componentName(r.value),a=RegExp(`^\\<${t}`);if(isPlayground(t)){const n=(await format$1(nodeToString(r))).slice(1,1/0),i=`{props,${e.join(",")}}`,s=strip(removePlayground(n)).trim().replace(/'/g,"\\'").replace(/`/g,"\\`");r.value=r.value.replace(a,`<${t} __position={${o}} __code={\`${s}\`} __scope={${i}}`)}},getScope=(e,r)=>importsFromEntry(e);var index=()=>e=>{const r=flatten(e.children.filter(e=>is("import",e)).map(getScope)),o=[e.children.filter(e=>is("jsx",e)).map(addCodeProp(r))];return Promise.all(o).then(()=>e)};export default index;
